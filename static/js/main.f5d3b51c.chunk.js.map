{"version":3,"sources":["Backend/backend.js","AuthWindow/Authorization.js","CompanionNameContainer/CompanionNameContainer.js","MessageItem/MessageItem.js","MessageContainer/MessageContainer.js","NewMessageForm/NewMessageForm.js","DialogPage/DialogPage.js","App.js","index.js"],"names":["usersDB","ID","messagesList","messageID","text","sender","getMessageID","currentDate","Date","getUTCFullYear","toString","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","addMessage","author","push","getToken","name","password","userID","Array","from","currentLetter","charCodeAt","join","getUserID","some","item","Authorization","props","state","login","handleLoginChange","bind","handlePasswordChange","onClick","event","this","setState","target","value","preventDefault","currentUserToken","alert","onLogin","className","for","id","type","onChange","React","Component","CompanionNameContainer","isOnline","companionName","MessageItem","messageData","MessageContainer","loadMessages","currentDialogID","setInterval","map","key","NewMessageForm","handleChange","handleSubmit","placeholder","DialogPage","dialogID","App","token","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5d3b51c.chunk.js","sourcesContent":["let usersDB = [{ID: \"971081011204950515253\"}, // login: \"alex\", password: \"12345\"\r\n               {ID: \"98111116113119101114116121\"}]; // login: \"bot\", password: \"qwerty\"\r\nlet messagesList = [{ messageID: \"202061821527\", text: \"Здравствуйте, я демонстрационный бот, который будет повторять за вами сообщения\", sender: \"bot\"},\r\n                    { messageID: \"202061821533\", text: \"Демонстрационное сообщение\", sender: \"alex\"}];\r\n\r\nfunction getMessageID() { // генерирует уникальный ID для сообщения\r\n    let currentDate = new Date();\r\n    return currentDate.getUTCFullYear().toString() + currentDate.getUTCMonth().toString() + currentDate.getUTCDate().toString() +\r\n    currentDate.getUTCHours().toString() + currentDate.getUTCMinutes().toString() + currentDate.getUTCSeconds().toString();\r\n}\r\nfunction addMessage(author, text) {\r\n    messagesList.push({\r\n        messageID: getMessageID(),\r\n        text: text,\r\n        sender: author\r\n    });\r\n}\r\nexport function sendMessage(author, text) {\r\n    addMessage(author, text);\r\n    addMessage(\"bot\", text);\r\n}\r\nfunction getUserID(name, password) {\r\n    return Array.from(name + password, currentLetter => currentLetter.charCodeAt()).join(\"\");\r\n}\r\nexport function getToken(name, password) {\r\n    let userID = getUserID(name, password);\r\n    if(usersDB.some((item)=>{return userID === item.ID})) {\r\n        let currentDate = new Date();\r\n        return currentDate.getUTCHours().toString() + currentDate.getUTCMinutes().toString() + currentDate.getUTCSeconds().toString();\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\nexport function getMessages() {\r\n    return messagesList;\r\n}","import React from \"react\"\r\nimport { getToken } from \"../Backend/backend\"\r\nimport './Auth.css'\r\n\r\nexport default class Authorization extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: \"\",\r\n            password: \"\"\r\n        };\r\n        this.handleLoginChange = this.handleLoginChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    handleLoginChange(event) {\r\n        this.setState({login: event.target.value});\r\n    }\r\n    handlePasswordChange(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n    onClick(event) {\r\n        event.preventDefault();\r\n        let {login, password} = this.state;\r\n        let currentUserToken = getToken(login, password);\r\n        if (currentUserToken === \"\") {\r\n            alert(\"Ошибка входа\");\r\n            this.setState({\r\n                login: \"\",\r\n                password: \"\"\r\n            });\r\n        }\r\n        else {\r\n            alert(`Добро пожаловать, ${login}`);\r\n            this.props.onLogin(login, currentUserToken);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n        <div className=\"center-container\">\r\n            <div className=\"authorization-block\">\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"user-login\">Логин</label>\r\n                        <input id=\"user-login\" type=\"text\" value = {this.state.login} onChange = {this.handleLoginChange}></input>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label for=\"user-password\">Пароль</label>\r\n                        <input id=\"user-password\" type=\"password\" value = {this.state.password} onChange = {this.handlePasswordChange}></input>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <input id=\"auth-button\" type=\"submit\" onClick={this.onClick} value=\"Войти\"></input>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./CompanionNameContainer.css\";\r\nexport default class CompanionNameContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props); // companionName\r\n        this.state = {\r\n            isOnline: true // пока что не используется\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"companion-name-container\">\r\n                <span className=\"text-vertical-align-center\">\r\n                    {this.props.companionName}  \r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./MessageItem.css\";\r\n\r\nexport function MessageItem(props) {\r\n    let {messageData, login} = props;\r\n    let className = \"message-item \" + (messageData.sender === login ? \"mine\" : \"companion\");\r\n    return(\r\n        <div className={className}>\r\n            {messageData.text}\r\n        </div>   \r\n    );\r\n}","import React from \"react\";\r\nimport {MessageItem} from \"../MessageItem/MessageItem\";\r\nimport {getMessages} from \"../Backend/backend\";\r\nimport \"./MessageContainer.css\";\r\n\r\nexport default class MessageContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props); // login, companionName, currentDialogID\r\n        this.state = {\r\n            messagesList: [] \r\n        }\r\n        this.loadMessages = this.loadMessages.bind(this);\r\n    }\r\n    loadMessages() {\r\n        this.setState({messagesList: getMessages(this.props.currentDialogID)}); // заглушка для эмуляции бэкенда\r\n    }\r\n    componentDidMount() {\r\n        setInterval(this.loadMessages, 100);\r\n    }\r\n    render() {\r\n        let {messagesList} = this.state;\r\n        let {login} = this.props;\r\n        return(\r\n            <div className=\"messages-field\">\r\n                {messagesList.map( (item) => {\r\n                    let {messageID} = item;\r\n                    return (\r\n                        <MessageItem key={messageID} messageData={item} login={login}/>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    } \r\n}","import React from \"react\"\r\nimport {sendMessage} from \"../Backend/backend\"\r\nimport  \"./NewMessageForm.css\"\r\n\r\nexport default class NewMessageForm extends React.Component {\r\n    constructor(props) {\r\n        super(props); //author, dialogID\r\n        this.state = {\r\n            value: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        sendMessage(this.props.author, this.state.value);\r\n        this.setState({\r\n            value: ''\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <form className=\"new-message-form\">\r\n            <textarea className=\"text-input\" value={this.state.value} \r\n                onChange={this.handleChange}\r\n                placeholder=\"Написать сообещение...\">\r\n            </textarea>\r\n            <button className=\"submit-button\" onClick={this.handleSubmit} type=\"submit\">Отправить</button>\r\n        </form>  \r\n        );  \r\n    }\r\n}","import React from 'react';\r\nimport './DialogPage.css';\r\nimport CompanionNameContainer from \"../CompanionNameContainer/CompanionNameContainer.js\"\r\nimport MessageContainer from \"../MessageContainer/MessageContainer\"\r\nimport NewMessageForm from \"../NewMessageForm/NewMessageForm\"\r\nexport default class DialogPage extends React.Component {\r\n    constructor(props) {\r\n        super(props); // login, token\r\n        this.state = {\r\n            companionName: \"Echo Bot\",\r\n            dialogID: \"\"\r\n        }\r\n    }\r\n    render(){\r\n        let {login} = this.props;\r\n        let {companionName, dialogID} = this.state;\r\n        return(\r\n            <div className=\"main-wrap\">\r\n               { /*<div className=\"left-container\">\r\n                    <div className =\"topics-container\">\r\n                        ЗАГЛУШКА, ТУТ БУДЕТ СПИСОК ДИАЛОГОВ\r\n                    </div> \r\n        </div> */}\r\n                <div className=\"right-container\">\r\n                    <CompanionNameContainer companionName={companionName}/>\r\n                    <MessageContainer login={login} companionName={companionName} dialogID ={dialogID}/>\r\n                    <NewMessageForm author={login} dialogID={dialogID}/>\r\n                </div>   \r\n            </div> \r\n        );\r\n    }\r\n} ","import React from 'react'\r\nimport Authorization from \"./AuthWindow/Authorization\"\r\nimport DialogPage from './DialogPage/DialogPage'\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                login: '',\r\n                token: ''\r\n            };\r\n        this.onLogin = this.onLogin.bind(this);\r\n    }\r\n    onLogin(login, token) {\r\n        this.setState({token: token, login: login});\r\n    }\r\n    render() {\r\n        if (!this.state.login && !this.state.token) {\r\n            return <Authorization onLogin = {this.onLogin}/>\r\n        }\r\n        else {\r\n            return <DialogPage login = {this.state.login} token={this.state.token}/> \r\n        }      \r\n    }   \r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\"\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}